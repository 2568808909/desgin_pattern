package cn.ccb.pattern.creational.prototype;

/**
 * 定义：指原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象，而不需要知道任何创建的细节，不调用构造函数
 * 类型：创建型
 *
 * 适用场景：
 * 1.类初始化消耗较多资源
 * 2.new产生的对象需要非常繁琐的过程（数据准备，访问权限等）
 * 3.构造函数比较复杂
 * 4.循环体中产生大量对象时
 *
 * 优点：
 * 1.原型模式性能比直接new一个对象性能高
 * 2.简化创建的过程
 *
 * 缺点：
 * 1.必须配备克隆方法
 * 2.对克隆复杂对象或对克隆出的对象进行复杂改造时，容易引用风险
 * 3.对复杂对象深拷贝、浅拷贝要运用得当
 *
 * 扩展：
 * 浅克隆：基本类型各自复制一份，引用类型指向同一份
 * 深克隆：基本类型和引用都各自复制一份
 */
public class ProtoType {
}
