package cn.ccb.pattern.behavioral.observer;

/**
 * 观察者模式
 * 定义：定义了对象之间一对多的依赖，让多个观察者同时监听一个主题对象，当主题对象发生变化时，它的素有依赖着（观察者）都会受到通知并更新
 *类型：行为型
 *
 * 使用场景：
 *  1）关联行为场景，建立一套触发机制
 *
 * 优点：
 *  1）观察者和被观察者之间建立了一个抽象的耦合
 *  2）观察者模式支持广播通信
 *
 * 缺点：
 *  1）观察者之间有过多的细节依赖，提高实践消耗及程序复杂度
 *  2）使用要适当，要避免循环调用
 */
public class Observer {
}
